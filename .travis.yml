language: node_js
node_js: 10.15.3

jobs:
  include:
    - name: node packages linux
      os: linux      
      before_install:
       - export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
       - export DOTNET_CLI_TELEMETRY_OPTOUT=1
       - wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
       - sudo dpkg -i packages-microsoft-prod.deb
       - sudo apt-get update
       - sudo apt-get install apt-transport-https
       - sudo apt-get update
       - sudo apt-get install dotnet-sdk-3.0
      install: 
       - npm install -g npm@'>=6.9.0'
       - "cd coreclr-hosting"       
       - npm i -g prebuild
       - npm i --build-from-source
       - prebuild -t 10.15.3
       - prebuild -t 7.1.2 -r electron
       # TODO: Why is process.env.DEBUG set when building production?
       - "cd ../electron-blazor-glue"
       - npm i
      script:
       - cd ../coreclr-hosting             
       - npm run build-testapp
       - npm run mocha
       - cd ../electron-blazor-glue
       - npm run prepare
       - cd ..
       - ls coreclr-hosting/prebuilds/@nodeclrhost
       

       
      deploy:
       - provider: releases
         skip_cleanup: true
         token: $GITHUB_TOKEN
         file_glob: true
         file: coreclr-hosting/prebuilds/@nodeclrhost/*
         overwrite: true
         on:
          tags: true
       - provider: script
         script:
          - cd coreclr-hosting
          - echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          - npm publish --access public --dry-run
       - provider: script
         script:
          - cd ../electron-blazor-glue
          - echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
          - npm publish --access public --dry-run
       #- provider: npm
       #  email: "$NPM_EMAIL"
       #  api_key: "$NPM_TOKEN"
       #  access: public
       #  src: coreclr-hosting
       #  skip_cleanup: true
       #- provider: npm
       #  email: "$NPM_EMAIL"
       #  api_key: "$NPM_TOKEN"
       #  access: public
       #  src: electron-blazor-glue
       #  skip_cleanup: true

    - name: prebuild coreclr-hosting osx
      os: osx   
      addons:
        homebrew:
          update: true
          casks:
           - dotnet-sdk
      install: 
       - "cd coreclr-hosting"
       - npm install -g npm@'>=6.9.0'
       - dotnet --version
       - npm i -g prebuild
       - npm i --build-from-source
       - prebuild -t 10.15.3
       - prebuild -t 7.1.2 -r electron
      script:
       - npm run build-testapp
       - npm run mocha
       - cd ..
       - ls coreclr-hosting/prebuilds/@nodeclrhost
      deploy:
        skip_cleanup: true
        provider: releases
        token: $GITHUB_TOKEN
        file_glob: true
        file: coreclr-hosting/prebuilds/@nodeclrhost/*
        overwrite: true
        on:
          tags: true

    - name: prebuild coreclr-hosting windows
      os: windows         
      install: 
       - choco install dotnetcore-sdk
       - "cd coreclr-hosting"
       # - npm install -g npm@'>=6.9.0'
       - dotnet --version
       - npm i -g prebuild
       - npm i --build-from-source
       - prebuild -t 10.15.3
       - prebuild -t 7.1.2 -r electron
      script:
       - npm run build-testapp
       - npm run mocha
       - cd ..      
      deploy:
        skip_cleanup: true
        provider: releases
        token: $GITHUB_TOKEN
        file_glob: true
        file: coreclr-hosting/prebuilds/@nodeclrhost/*
        overwrite: true
        on:
          tags: true
    - 
      name: C# nuget packages      
      language: csharp
      mono: none
      dotnet: 3.0.100
      script:
       - cd NodeHostEnvironment
       - dotnet pack -c Release
       - cd ../ElectronHostedBlazor
       - dotnet pack -c Release
      before_deploy:
       - cd ..
      deploy:
        skip_cleanup: true
        provider: releases
        token: $GITHUB_TOKEN
        file_glob: true
        file: 
         - NodeHostEnvironment/bin/Release/*.snupkg
         - NodeHostEnvironment/bin/Release/*.nupkg
         - ElectronHostedBlazor/bin/Release/*.snupkg
         - ElectronHostedBlazor/bin/Release/*.nupkg
        overwrite: true
        on:
          tags: true
