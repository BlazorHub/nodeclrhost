language: node_js
node_js: 10.15.3

jobs:
  include:
    - 
      name: coreclr-hosting linux
      os: linux
      stage: hosting core      
      before_install:
       - export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
       - export DOTNET_CLI_TELEMETRY_OPTOUT=1
       - wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
       - sudo dpkg -i packages-microsoft-prod.deb
       - sudo apt-get update
       - sudo apt-get install apt-transport-https
       - sudo apt-get update
       - sudo apt-get install dotnet-sdk-3.0
      install: 
       - "cd coreclr-hosting"
       - npm install -g npm@'>=6.9.0'
       - npm i -g prebuild
       - npm i --build-from-source
       - prebuild -t 10.15.3
       - prebuild -t 7.1.2 -r electron
      script:
       - npm run build-testapp
       - npm run mocha      
      deploy:
        provider: releases
        token: $GITHUB_TOKEN
        file_glob: true
        file: prebuilds/@nodeclrhost/*
        overwrite: true
        draft: true
    - 
      name: coreclr-hosting osx
      os: osx   
      addons:
        homebrew:
          update: true
          casks:
           - dotnet-sdk
      install: 
       - "cd coreclr-hosting"
       - npm install -g npm@'>=6.9.0'
       - dotnet --version
       - npm i -g prebuild
       - npm i --build-from-source
       - prebuild -t 10.15.3
       - prebuild -t 7.1.2 -r electron
      script:
       - npm run build-testapp
       - npm run mocha
      deploy:
        provider: releases
        token: $GITHUB_TOKEN
        file_glob: true
        file: prebuilds/@nodeclrhost/*
        overwrite: true
        draft: true
    - 
      name: coreclr-hosting windows
      os: windows         
      install: 
       - choco install dotnetcore-sdk
       - "cd coreclr-hosting"
       - npm install -g npm@'>=6.9.0'
       - dotnet --version
       - npm i -g prebuild
       - npm i --build-from-source
       - prebuild -t 10.15.3
       - prebuild -t 7.1.2 -r electron
      script:
       - npm run build-testapp
       - npm run mocha
      deploy:
        provider: releases
        token: $GITHUB_TOKEN
        file_glob: true
        file: prebuilds/@nodeclrhost/*
        overwrite: true
        draft: true
        
    - 
      name: NodeHostEnvironment C#
      before_script:
        - "cd NodeHostEnvironment"
      language: csharp
      mono: none
      dotnet: 3.0.100
      script:
       - dotnet build
    -
      name: electron-blazor-glue       
      stage: blazor hosting
      os: linux
      before_install:
       - export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
       - export DOTNET_CLI_TELEMETRY_OPTOUT=1
       - wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
       - sudo dpkg -i packages-microsoft-prod.deb
       - sudo apt-get update
       - sudo apt-get install apt-transport-https
       - sudo apt-get update
       - sudo apt-get install dotnet-sdk-3.0
      install: 
       - cd coreclr-hosting
       - npm install -g npm@'>=6.9.0'
       - npm i -g prebuild
       - npm i --build-from-source
       - npm run configure
       - npm run build:debug
       # TODO: Why is process.env.DEBUG set when building production?
       - "cd ../electron-blazor-glue"
       - npm install -g npm@'>=6.9.0'
       - npm i
      script:
       - npm run prepare
    - 
      name: ElectronHostedBlazor C#
      before_script:
        - "cd ElectronHostedBlazor"
      language: csharp
      mono: none
      dotnet: 3.0.100
      script:
       - dotnet build